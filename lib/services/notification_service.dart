import 'dart:typed_data';
import 'package:flutter/foundation.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart' show Color;
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:timezone/timezone.dart' as tz;
import 'package:timezone/data/latest_all.dart' as tz;
import '../models/booking.dart';
import '../main.dart' show navigatorKey;

/// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è background —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
@pragma('vm:entry-point')
void notificationTapBackground(NotificationResponse notificationResponse) {
  print('üîî ========================================');
  print('üîî BACKGROUND –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ü–û–õ–£–ß–ï–ù–û!');
  print('üîî ID: ${notificationResponse.id}');
  print('üîî Payload: ${notificationResponse.payload}');
  print('üîî –í—Ä–µ–º—è: ${DateTime.now()}');
  print('üîî ========================================');
  debugPrint('üîî ========================================');
  debugPrint('üîî BACKGROUND –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ü–û–õ–£–ß–ï–ù–û!');
  debugPrint('üîî ID: ${notificationResponse.id}');
  debugPrint('üîî Payload: ${notificationResponse.payload}');
  debugPrint('üîî –í—Ä–µ–º—è: ${DateTime.now()}');
  debugPrint('üîî ========================================');

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –¥–µ—Ç–∞–ª—è–º –∑–∞–∫–∞–∑–∞
  _handleNotificationNavigation(notificationResponse.payload);
}

/// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
void _handleNotificationNavigation(String? payload) {
  if (payload == null || payload.isEmpty) {
    debugPrint('‚ö†Ô∏è Payload –ø—É—Å—Ç–æ–π, –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
    return;
  }

  debugPrint('üîî –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: $payload');

  // –†–∞–∑–±–∏—Ä–∞–µ–º payload
  final parts = payload.split(':');
  if (parts.length != 2) {
    debugPrint('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç payload: $payload');
    return;
  }

  final type = parts[0]; // 'booking' –∏–ª–∏ 'test'
  final id = parts[1]; // ID –∑–∞–∫–∞–∑–∞ –∏–ª–∏ —Ç–∏–ø —Ç–µ—Å—Ç–∞

  if (type == 'booking') {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –¥–µ—Ç–∞–ª—è–º –∑–∞–∫–∞–∑–∞
    debugPrint('üì± –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—è–º –∑–∞–∫–∞–∑–∞: $id');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π navigatorKey –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    final context = navigatorKey.currentContext;
    if (context != null) {
      // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ —ç–∫—Ä–∞–Ω—É –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
      Navigator.of(context).pushNamed('/booking-details', arguments: id);
    } else {
      debugPrint('‚ö†Ô∏è Navigator context –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
  } else if (type == 'test') {
    // –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    debugPrint('üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: $id');
  }
}

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
/// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ
class NotificationService {
  static final NotificationService _instance = NotificationService._internal();

  NotificationService._internal();

  static NotificationService get instance => _instance;

  final FlutterLocalNotificationsPlugin _localNotifications =
      FlutterLocalNotificationsPlugin();

  bool _localInitialized = false;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<bool> initialize() async {
    if (_localInitialized) return true;

    try {
      print('üîî [INIT] ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô =====');

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è timezone –¥–ª—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      tz.initializeTimeZones();
      tz.setLocalLocation(tz.getLocation('Europe/Moscow'));
      print('üîî [INIT] ‚úÖ Timezone —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: Europe/Moscow');

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Android
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∫–æ–Ω–∫—É –∫—Ä–∞—Å–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const androidSettings = AndroidInitializationSettings(
        '@drawable/ic_notification_car',
      );

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è iOS
      const iosSettings = DarwinInitializationSettings(
        requestAlertPermission: true,
        requestBadgePermission: true,
        requestSoundPermission: true,
      );

      const initSettings = InitializationSettings(
        android: androidSettings,
        iOS: iosSettings,
      );

      await _localNotifications.initialize(
        initSettings,
        onDidReceiveNotificationResponse: _onNotificationTappedStatic,
      );
      print('üîî [INIT] ‚úÖ FlutterLocalNotifications –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω—ã–µ alarm'—ã (Android 12+)
      final androidPlugin = _localNotifications
          .resolvePlatformSpecificImplementation<
            AndroidFlutterLocalNotificationsPlugin
          >();

      if (androidPlugin != null) {
        print('üîî [INIT] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω—ã–µ alarm\'—ã...');

        final canScheduleExactAlarms = await androidPlugin
            .canScheduleExactNotifications();
        print(
          'üîî [INIT] canScheduleExactNotifications: $canScheduleExactAlarms',
        );

        if (canScheduleExactAlarms == null || !canScheduleExactAlarms) {
          print('‚ö†Ô∏è [INIT] ‚ùå –†–ê–ó–†–ï–®–ï–ù–ò–ï –ù–ê –¢–û–ß–ù–´–ï ALARM\'–´ –ù–ï –ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–û!');
          print('‚ö†Ô∏è [INIT] –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ...');

          // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
          final granted = await androidPlugin.requestExactAlarmsPermission();
          print('üîî [INIT] –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $granted');

          if (granted == null || !granted) {
            print(
              '‚ùå [INIT] –ö–†–ò–¢–ò–ß–ù–û: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å!',
            );
          } else {
            print('‚úÖ [INIT] –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω—ã–µ alarm\'—ã –ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–û!');
          }
        } else {
          print('‚úÖ [INIT] –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω—ã–µ alarm\'—ã —É–∂–µ –µ—Å—Ç—å');
        }
      }

      _localInitialized = true;
      print('üîî [INIT] ========================================');
      debugPrint('‚úÖ –°–µ—Ä–≤–∏—Å –ª–æ–∫–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

      return true;
    } catch (e) {
      print('‚ùå [INIT] –û–®–ò–ë–ö–ê: $e');
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return false;
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–ª—è background)
  @pragma('vm:entry-point')
  static void _onNotificationTappedStatic(NotificationResponse response) {
    print('üîî ========================================');
    print('üîî –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ü–û–õ–£–ß–ï–ù–û (–ù–ê–ñ–ê–¢–ò–ï)!');
    print('üîî ID: ${response.id}');
    print('üîî Payload: ${response.payload}');
    print('üîî Action ID: ${response.actionId}');
    print('üîî Input: ${response.input}');
    print(
      'üîî Notification Response Type: ${response.notificationResponseType}',
    );
    print('üîî –í—Ä–µ–º—è: ${DateTime.now()}');
    print('üîî ========================================');
    debugPrint('üîî ========================================');
    debugPrint('üîî –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ü–û–õ–£–ß–ï–ù–û!');
    debugPrint('üîî ID: ${response.id}');
    debugPrint('üîî Payload: ${response.payload}');
    debugPrint('üîî Action ID: ${response.actionId}');
    debugPrint('üîî Input: ${response.input}');
    debugPrint(
      'üîî Notification Response Type: ${response.notificationResponseType}',
    );
    debugPrint('üîî –í—Ä–µ–º—è: ${DateTime.now()}');
    debugPrint('üîî ========================================');

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –¥–µ—Ç–∞–ª—è–º –∑–∞–∫–∞–∑–∞
    _handleNotificationNavigation(response.payload);
  }

  /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ foreground
  @pragma('vm:entry-point')
  static void _onForegroundNotification(NotificationResponse response) {
    debugPrint('üì± ========================================');
    debugPrint('üì± FOREGROUND –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!');
    debugPrint('üì± ID: ${response.id}');
    debugPrint('üì± Payload: ${response.payload}');
    debugPrint('üì± –í—Ä–µ–º—è: ${DateTime.now()}');
    debugPrint('üì± ========================================');
  }

  /// –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π DateTime –∏–∑ Booking
  DateTime _getBookingDateTime(Booking booking) {
    final timeParts = booking.departureTime.split(':');
    final hour = int.parse(timeParts[0]);
    final minute = int.parse(timeParts[1]);

    return DateTime(
      booking.departureDate.year,
      booking.departureDate.month,
      booking.departureDate.day,
      hour,
      minute,
    );
  }

  /// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ Booking
  String _getRouteString(Booking booking) {
    if (booking.pickupAddress != null && booking.dropoffAddress != null) {
      return '${booking.pickupAddress} ‚Üí ${booking.dropoffAddress}';
    } else if (booking.fromStop != null && booking.toStop != null) {
      return '${booking.fromStop!.name} ‚Üí ${booking.toStop!.name}';
    } else if (booking.pickupPoint != null) {
      return '–∏–∑ ${booking.pickupPoint}';
    } else {
      return '–≤–∞—à—É –ø–æ–µ–∑–¥–∫—É';
    }
  }

  /// –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  Future<void> showNotification({
    required String title,
    required String body,
    String? payload,
  }) async {
    try {
      const androidDetails = AndroidNotificationDetails(
        'trip_reminders',
        '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–µ–∑–¥–∫–∞—Ö',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø–æ–µ–∑–¥–∫–∞—Ö',
        importance: Importance.max,
        priority: Priority.high,
        showWhen: true,
        enableLights: true,
        enableVibration: true,
        playSound: true,
        ticker: 'Time to Travel',
        fullScreenIntent: true,
        channelShowBadge: true,
        autoCancel: false,
        ongoing: false,
        onlyAlertOnce: false,
      );

      const iosDetails = DarwinNotificationDetails(
        presentAlert: true,
        presentBadge: true,
        presentSound: true,
      );

      const details = NotificationDetails(
        android: androidDetails,
        iOS: iosDetails,
      );

      await _localNotifications.show(
        DateTime.now().millisecondsSinceEpoch % 100000,
        title,
        body,
        details,
        payload: payload,
      );
      debugPrint('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ: $title');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 1 –¥–µ–Ω—å –¥–æ –ø–æ–µ–∑–¥–∫–∏ (–≤ 9:00 —É—Ç—Ä–∞)
  Future<bool> schedule24HourReminder(Booking booking) async {
    try {
      print('üîî [24H] ===== –ù–ê–ß–ê–õ–û –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø =====');
      final bookingDateTime = _getBookingDateTime(booking);
      print('üîî [24H] –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏: $bookingDateTime');

      // –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (–∑–∞ –¥–µ–Ω—å –¥–æ –ø–æ–µ–∑–¥–∫–∏)
      final reminderDate = bookingDateTime.subtract(const Duration(days: 1));
      print('üîî [24H] –î–∞—Ç–∞ - 1 –¥–µ–Ω—å: $reminderDate');

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ 9:00 —É—Ç—Ä–∞
      final reminderTime = DateTime(
        reminderDate.year,
        reminderDate.month,
        reminderDate.day,
        9, // 9 —É—Ç—Ä–∞
        0, // 0 –º–∏–Ω—É—Ç
      );
      print('üîî [24H] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è 9:00: $reminderTime');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
      final now = DateTime.now();
      print('üîî [24H] –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: $now');
      print(
        'üîî [24H] –ü—Ä–æ–≤–µ—Ä–∫–∞: reminderTime.isBefore(now) = ${reminderTime.isBefore(now)}',
      );

      if (reminderTime.isBefore(now)) {
        print('‚ö†Ô∏è [24H] ‚ùå –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ø—Ä–æ—à–ª–æ–º, –ü–†–û–ü–£–°–ö–ê–ï–ú');
        debugPrint('‚ö†Ô∏è [24H] –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ø—Ä–æ—à–ª–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        debugPrint('   –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏: $bookingDateTime');
        debugPrint('   –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $reminderTime');
        debugPrint('   –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: $now');
        return false;
      }
      print('üîî [24H] ‚úÖ –í—Ä–µ–º—è –≤ –±—É–¥—É—â–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');

      final routeString = _getRouteString(booking);
      print('üîî [24H] –ú–∞—Ä—à—Ä—É—Ç: $routeString');

      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ TZDateTime –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      print('üîî [24H] –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ TZDateTime...');
      print('üîî [24H] reminderTime –î–û –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: $reminderTime');
      final scheduledTime = tz.TZDateTime.from(reminderTime, tz.local);
      print('üîî [24H] TZDateTime –ü–û–°–õ–ï –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: $scheduledTime');
      print('üîî [24H] Timezone: ${tz.local.name}');

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      print('üîî [24H] –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Android...');
      final androidDetails = AndroidNotificationDetails(
        'trip_reminders',
        '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–µ–∑–¥–∫–∞—Ö',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø–æ–µ–∑–¥–∫–∞—Ö',
        importance: Importance.max,
        priority: Priority.max,
        showWhen: true,
        enableLights: true,
        ledColor: const Color(0xFF0000FF),
        ledOnMs: 1000,
        ledOffMs: 500,
        enableVibration: true,
        vibrationPattern: Int64List.fromList([0, 500, 250, 500]),
        playSound: true,
        icon: '@drawable/ic_notification_car',
        ticker: 'Time to Travel - –ü–æ–µ–∑–¥–∫–∞ –∑–∞–≤—Ç—Ä–∞',
        fullScreenIntent: true,
        channelShowBadge: true,
        autoCancel: false,
        ongoing: false,
        onlyAlertOnce: false,
        visibility: NotificationVisibility.public,
      );

      const iosDetails = DarwinNotificationDetails(
        presentAlert: true,
        presentBadge: true,
        presentSound: true,
      );

      final details = NotificationDetails(
        android: androidDetails,
        iOS: iosDetails,
      );

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      final notificationId = '${booking.id}_24h'.hashCode;
      print('üîî [24H] ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationId');
      print('üîî [24H] Payload: booking:${booking.id}');

      // –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      print('üîî [24H] ‚è∞ –í–´–ó–´–í–ê–ï–ú zonedSchedule()...');
      print('üîî [24H]    ID: $notificationId');
      print('üîî [24H]    –ó–∞–≥–æ–ª–æ–≤–æ–∫: üöó –ü–æ–µ–∑–¥–∫–∞ –∑–∞–≤—Ç—Ä–∞');
      print(
        'üîî [24H]    –¢–µ–ª–æ: –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: $routeString –∑–∞–≤—Ç—Ä–∞ –≤ ${booking.departureTime}',
      );
      print('üîî [24H]    –í—Ä–µ–º—è: $scheduledTime');
      print('üîî [24H]    –†–µ–∂–∏–º: exactAllowWhileIdle');

      await _localNotifications.zonedSchedule(
        notificationId,
        'üöó –ü–æ–µ–∑–¥–∫–∞ –∑–∞–≤—Ç—Ä–∞',
        '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: $routeString –∑–∞–≤—Ç—Ä–∞ –≤ ${booking.departureTime}',
        scheduledTime,
        details,
        androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
        uiLocalNotificationDateInterpretation:
            UILocalNotificationDateInterpretation.absoluteTime,
        payload: 'booking:${booking.id}',
      );
      print('üîî [24H] ‚úÖ zonedSchedule() –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û!');

      debugPrint(
        '‚úÖ [24H] –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 1 –¥–µ–Ω—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è $routeString',
      );
      debugPrint('   ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationId');
      debugPrint('   –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏: $bookingDateTime');
      debugPrint('   –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $scheduledTime');
      debugPrint('   Payload: booking:${booking.id}');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 1 –¥–µ–Ω—å: $e');
      return false;
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 1 —á–∞—Å –¥–æ –ø–æ–µ–∑–¥–∫–∏
  Future<bool> schedule1HourReminder(Booking booking) async {
    try {
      print('üîî [1H] ===== –ù–ê–ß–ê–õ–û –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø =====');
      final bookingDateTime = _getBookingDateTime(booking);
      print('üîî [1H] –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏: $bookingDateTime');

      final reminderTime = bookingDateTime.subtract(const Duration(hours: 1));
      print('üîî [1H] –í—Ä–µ–º—è - 1 —á–∞—Å: $reminderTime');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
      final now = DateTime.now();
      print('üîî [1H] –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: $now');
      print(
        'üîî [1H] –ü—Ä–æ–≤–µ—Ä–∫–∞: reminderTime.isBefore(now) = ${reminderTime.isBefore(now)}',
      );

      if (reminderTime.isBefore(now)) {
        print('‚ö†Ô∏è [1H] ‚ùå –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ø—Ä–æ—à–ª–æ–º, –ü–†–û–ü–£–°–ö–ê–ï–ú');
        debugPrint('‚ö†Ô∏è [1H] –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ø—Ä–æ—à–ª–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        debugPrint('   –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏: $bookingDateTime');
        debugPrint('   –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $reminderTime');
        debugPrint('   –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: $now');
        return false;
      }
      print('üîî [1H] ‚úÖ –í—Ä–µ–º—è –≤ –±—É–¥—É—â–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');

      final routeString = _getRouteString(booking);
      print('üîî [1H] –ú–∞—Ä—à—Ä—É—Ç: $routeString');

      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ TZDateTime –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      print('üîî [1H] –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ TZDateTime...');
      print('üîî [1H] reminderTime –î–û –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: $reminderTime');
      final scheduledTime = tz.TZDateTime.from(reminderTime, tz.local);
      print('üîî [1H] TZDateTime –ü–û–°–õ–ï –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: $scheduledTime');
      print('üîî [1H] Timezone: ${tz.local.name}');

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      print('üîî [1H] –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Android...');
      final androidDetails = AndroidNotificationDetails(
        'trip_reminders',
        '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–µ–∑–¥–∫–∞—Ö',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø–æ–µ–∑–¥–∫–∞—Ö',
        importance: Importance.max,
        priority: Priority.max,
        showWhen: true,
        enableLights: true,
        ledColor: const Color(0xFFFF0000),
        ledOnMs: 1000,
        ledOffMs: 500,
        enableVibration: true,
        vibrationPattern: Int64List.fromList([0, 1000, 500, 1000]),
        playSound: true,
        icon: '@drawable/ic_notification_car',
        ticker: 'Time to Travel - –ü–æ–µ–∑–¥–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Å',
        fullScreenIntent: true,
        channelShowBadge: true,
        autoCancel: false,
        ongoing: false,
        onlyAlertOnce: false,
        visibility: NotificationVisibility.public,
      );

      const iosDetails = DarwinNotificationDetails(
        presentAlert: true,
        presentBadge: true,
        presentSound: true,
      );

      final details = NotificationDetails(
        android: androidDetails,
        iOS: iosDetails,
      );

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      final notificationId = '${booking.id}_1h'.hashCode;
      print('üîî [1H] ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationId');
      print('üîî [1H] Payload: booking:${booking.id}');

      // –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      print('üîî [1H] ‚è∞ –í–´–ó–´–í–ê–ï–ú zonedSchedule()...');
      print('üîî [1H]    ID: $notificationId');
      print('üîî [1H]    –ó–∞–≥–æ–ª–æ–≤–æ–∫: üöó –ü–æ–µ–∑–¥–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Å');
      print(
        'üîî [1H]    –¢–µ–ª–æ: –°–∫–æ—Ä–æ –≤—ã–µ–∑–¥: $routeString –≤ ${booking.departureTime}',
      );
      print('üîî [1H]    –í—Ä–µ–º—è: $scheduledTime');
      print('üîî [1H]    –†–µ–∂–∏–º: exactAllowWhileIdle');

      await _localNotifications.zonedSchedule(
        notificationId,
        'üöó –ü–æ–µ–∑–¥–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Å',
        '–°–∫–æ—Ä–æ –≤—ã–µ–∑–¥: $routeString –≤ ${booking.departureTime}',
        scheduledTime,
        details,
        androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
        uiLocalNotificationDateInterpretation:
            UILocalNotificationDateInterpretation.absoluteTime,
        payload: 'booking:${booking.id}',
      );
      print('üîî [1H] ‚úÖ zonedSchedule() –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û!');

      debugPrint('‚úÖ [1H] –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 1 —á–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è $routeString');
      debugPrint('   ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationId');
      debugPrint('   –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏: $bookingDateTime');
      debugPrint('   –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $scheduledTime');
      debugPrint('   Payload: booking:${booking.id}');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è 1—á: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> sendBookingConfirmation(Booking booking) async {
    try {
      final routeString = _getRouteString(booking);
      await showNotification(
        title: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ',
        body: '–í–∞—à–∞ –ø–æ–µ–∑–¥–∫–∞ $routeString –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
        payload: 'booking:${booking.id}',
      );
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> sendBookingCancellation(Booking booking, String reason) async {
    try {
      final routeString = _getRouteString(booking);
      await showNotification(
        title: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ',
        body: '–ü–æ–µ–∑–¥–∫–∞ $routeString –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü—Ä–∏—á–∏–Ω–∞: $reason',
        payload: 'booking:${booking.id}',
      );
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ: $e');
      return false;
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> scheduleAllBookingNotifications(Booking booking) async {
    try {
      final results = await Future.wait([
        schedule24HourReminder(booking),
        schedule1HourReminder(booking),
      ]);

      final success = results.every((result) => result);
      debugPrint(
        'üîî –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ ${booking.id} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã: $success',
      );
      return success;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return false;
    }
  }

  /// –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<void> cancelBookingNotifications(String bookingId) async {
    try {
      await _localNotifications.cancel('${bookingId}_24h'.hashCode);
      await _localNotifications.cancel('${bookingId}_1h'.hashCode);
      debugPrint('‚úÖ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ $bookingId –æ—Ç–º–µ–Ω–µ–Ω—ã');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
    }
  }

  /// –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<void> cancelAllNotifications() async {
    try {
      await _localNotifications.cancelAll();
      debugPrint('‚úÖ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
    }
  }

  /// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<List<PendingNotificationRequest>> getPendingNotifications() async {
    try {
      return await _localNotifications.pendingNotificationRequests();
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return [];
    }
  }

  /// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<bool> requestPermission() async {
    try {
      debugPrint('üîî –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–æ');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
  Future<String?> getFCMToken() async {
    try {
      final token = 'fcm_token_${DateTime.now().millisecondsSinceEpoch}';
      debugPrint('üîî FCM —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: $token');
      return token;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è FCM —Ç–æ–∫–µ–Ω–∞: $e');
      return null;
    }
  }

  /// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  Future<void> sendTestNotificationNow() async {
    await showNotification(
      title: 'üöó –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (—Å–µ–π—á–∞—Å)',
      body: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ',
      payload: 'test:now',
    );
    debugPrint('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (—Å–µ–π—á–∞—Å) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  }

  /// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ)
  Future<void> sendTestNotification1MinuteAppOn() async {
    try {
      final scheduledTime = tz.TZDateTime.now(
        tz.local,
      ).add(const Duration(seconds: 5));

      final androidDetails = AndroidNotificationDetails(
        'test_notifications',
        '–¢–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã',
        importance: Importance.max,
        priority: Priority.max,
        showWhen: true,
        enableLights: true,
        ledColor: const Color(0xFF00FF00),
        ledOnMs: 1000,
        ledOffMs: 500,
        enableVibration: true,
        vibrationPattern: Int64List.fromList([0, 500, 250, 500]),
        playSound: true,
        ticker: 'Time to Travel Test - 5 sec',
        fullScreenIntent: true,
        channelShowBadge: true,
        autoCancel: false,
        ongoing: false,
        onlyAlertOnce: false,
        visibility: NotificationVisibility.public,
      );

      const iosDetails = DarwinNotificationDetails(
        presentAlert: true,
        presentBadge: true,
        presentSound: true,
      );

      final details = NotificationDetails(
        android: androidDetails,
        iOS: iosDetails,
      );

      await _localNotifications.zonedSchedule(
        99991, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        'üöó –¢–µ—Å—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–≤–∫–ª—é—á–µ–Ω–æ)',
        '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ. –í—Ä–µ–º—è: ${DateTime.now().add(const Duration(seconds: 5)).toString().substring(11, 19)}',
        scheduledTime,
        details,
        androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
        uiLocalNotificationDateInterpretation:
            UILocalNotificationDateInterpretation.absoluteTime,
        payload: 'test:5sec_on',
      );

      debugPrint('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ');
      debugPrint('   –í—Ä–µ–º—è: $scheduledTime');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–∞ 5 —Å–µ–∫—É–Ω–¥: $e');
    }
  }

  /// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ)
  Future<void> sendTestNotification2MinuteAppOff() async {
    try {
      final scheduledTime = tz.TZDateTime.now(
        tz.local,
      ).add(const Duration(seconds: 10));

      final androidDetails = AndroidNotificationDetails(
        'test_notifications',
        '–¢–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã',
        importance: Importance.max,
        priority: Priority.max,
        showWhen: true,
        enableLights: true,
        ledColor: const Color(0xFFFF0000),
        ledOnMs: 1000,
        ledOffMs: 500,
        enableVibration: true,
        vibrationPattern: Int64List.fromList([0, 1000, 500, 1000]),
        playSound: true,
        ticker: 'Time to Travel Test - 10 sec',
        fullScreenIntent: true,
        channelShowBadge: true,
        autoCancel: false,
        ongoing: false,
        onlyAlertOnce: false,
        visibility: NotificationVisibility.public,
      );

      const iosDetails = DarwinNotificationDetails(
        presentAlert: true,
        presentBadge: true,
        presentSound: true,
      );

      final details = NotificationDetails(
        android: androidDetails,
        iOS: iosDetails,
      );

      await _localNotifications.zonedSchedule(
        99992, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        'üöó –¢–µ—Å—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ (–í–´–ö–õ–Æ–ß–ï–ù–û)',
        '–ó–∞–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –°–ï–ô–ß–ê–°! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤: ${DateTime.now().add(const Duration(seconds: 10)).toString().substring(11, 19)}',
        scheduledTime,
        details,
        androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
        uiLocalNotificationDateInterpretation:
            UILocalNotificationDateInterpretation.absoluteTime,
        payload: 'test:10sec_off',
      );

      debugPrint('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ');
      debugPrint('   –í—Ä–µ–º—è: $scheduledTime');
      debugPrint('   ‚ö†Ô∏è –ó–ê–ö–†–û–ô–¢–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–∞ 10 —Å–µ–∫—É–Ω–¥: $e');
    }
  }

  /// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<void> sendAllTestNotifications() async {
    await sendTestNotificationNow();
    await sendTestNotification1MinuteAppOn();
    await sendTestNotification2MinuteAppOff();

    debugPrint('üöó –í–°–ï 3 –¢–ï–°–¢–û–í–´–• –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù–´:');
    debugPrint('   1Ô∏è‚É£ –°–µ–π—á–∞—Å - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    debugPrint('   2Ô∏è‚É£ –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ)');
    debugPrint('   3Ô∏è‚É£ –ß–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ (–ó–ê–ö–†–û–ô–¢–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï!)');
  }
}
