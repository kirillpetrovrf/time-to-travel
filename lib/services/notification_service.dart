import 'package:flutter/foundation.dart';
import '../models/booking.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
class NotificationService {
  static const NotificationService _instance = NotificationService._internal();
  
  const NotificationService._internal();
  
  static const NotificationService instance = _instance;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<bool> initialize() async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Messaging
      await Future.delayed(const Duration(milliseconds: 300));
      debugPrint('üîî –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return false;
    }
  }

  /// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<bool> requestPermission() async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –∑–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
      await Future.delayed(const Duration(milliseconds: 500));
      debugPrint('üîî –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–æ');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
  Future<String?> getFCMToken() async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
      await Future.delayed(const Duration(milliseconds: 200));
      final token = 'fcm_token_${DateTime.now().millisecondsSinceEpoch}';
      debugPrint('üîî FCM —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: $token');
      return token;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è FCM —Ç–æ–∫–µ–Ω–∞: $e');
      return null;
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 24 —á–∞—Å–∞ –¥–æ –ø–æ–µ–∑–¥–∫–∏
  Future<bool> schedule24HourReminder(Booking booking) async {
    try {
      final reminderTime = booking.departureTime.subtract(const Duration(hours: 24));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
      if (reminderTime.isBefore(DateTime.now())) {
        debugPrint('‚ö†Ô∏è –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ø—Ä–æ—à–ª–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        return false;
      }

      final notification = NotificationData(
        id: '${booking.id}_24h',
        title: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–µ–∑–¥–∫–µ',
        body: '–ó–∞–≤—Ç—Ä–∞ –≤ ${_formatTime(booking.departureTime)} —É –≤–∞—Å –ø–æ–µ–∑–¥–∫–∞ ${booking.fromLocation} ‚Üí ${booking.toLocation}',
        scheduledTime: reminderTime,
        type: NotificationType.tripReminder24h,
        bookingId: booking.id,
      );

      return await _scheduleNotification(notification);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è 24—á: $e');
      return false;
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 1 —á–∞—Å –¥–æ –ø–æ–µ–∑–¥–∫–∏
  Future<bool> schedule1HourReminder(Booking booking) async {
    try {
      final reminderTime = booking.departureTime.subtract(const Duration(hours: 1));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
      if (reminderTime.isBefore(DateTime.now())) {
        debugPrint('‚ö†Ô∏è –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ø—Ä–æ—à–ª–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        return false;
      }

      final notification = NotificationData(
        id: '${booking.id}_1h',
        title: '–ü–æ–µ–∑–¥–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Å!',
        body: '–ß–µ—Ä–µ–∑ —á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${booking.fromLocation} ‚Üí ${booking.toLocation}. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –ø–æ–µ–∑–¥–∫–µ.',
        scheduledTime: reminderTime,
        type: NotificationType.tripReminder1h,
        bookingId: booking.id,
      );

      return await _scheduleNotification(notification);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è 1—á: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> sendBookingConfirmation(Booking booking) async {
    try {
      final notification = NotificationData(
        id: '${booking.id}_confirmed',
        title: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ',
        body: '–í–∞—à–∞ –ø–æ–µ–∑–¥–∫–∞ ${booking.fromLocation} ‚Üí ${booking.toLocation} –Ω–∞ ${_formatDate(booking.departureTime)} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
        type: NotificationType.bookingConfirmed,
        bookingId: booking.id,
      );

      return await _sendImmediateNotification(notification);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> sendBookingCancellation(Booking booking, String reason) async {
    try {
      final notification = NotificationData(
        id: '${booking.id}_cancelled',
        title: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ',
        body: '–ü–æ–µ–∑–¥–∫–∞ ${booking.fromLocation} ‚Üí ${booking.toLocation} –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü—Ä–∏—á–∏–Ω–∞: $reason',
        type: NotificationType.bookingCancelled,
        bookingId: booking.id,
      );

      return await _sendImmediateNotification(notification);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—è
  Future<bool> sendDriverAssigned(Booking booking, String driverName, String driverPhone) async {
    try {
      final notification = NotificationData(
        id: '${booking.id}_driver',
        title: '–í–æ–¥–∏—Ç–µ–ª—å –Ω–∞–∑–Ω–∞—á–µ–Ω',
        body: '–í–æ–¥–∏—Ç–µ–ª—å $driverName (—Ç–µ–ª. $driverPhone) –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ–µ–∑–¥–∫—É',
        type: NotificationType.driverAssigned,
        bookingId: booking.id,
        data: {
          'driverName': driverName,
          'driverPhone': driverPhone,
        },
      );

      return await _sendImmediateNotification(notification);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–æ–¥–∏—Ç–µ–ª–µ: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–µ–∑–¥–∫–∏
  Future<bool> sendTimeChanged(Booking booking, DateTime newTime) async {
    try {
      final notification = NotificationData(
        id: '${booking.id}_time_changed',
        title: '–í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–æ',
        body: '–ù–æ–≤–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${_formatDateTime(newTime)}',
        type: NotificationType.timeChanged,
        bookingId: booking.id,
        data: {
          'newTime': newTime.toIso8601String(),
        },
      );

      return await _sendImmediateNotification(notification);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏: $e');
      return false;
    }
  }

  /// –û—Ç–º–µ–Ω–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> cancelBookingNotifications(String bookingId) async {
    try {
      final notificationIds = [
        '${bookingId}_24h',
        '${bookingId}_1h',
      ];

      for (final id in notificationIds) {
        await _cancelScheduledNotification(id);
      }

      debugPrint('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ $bookingId –æ—Ç–º–µ–Ω–µ–Ω—ã');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return false;
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<bool> _scheduleNotification(NotificationData notification) async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      await Future.delayed(const Duration(milliseconds: 100));
      
      debugPrint('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: ${notification.title} –Ω–∞ ${_formatDateTime(notification.scheduledTime!)}');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<bool> _sendImmediateNotification(NotificationData notification) async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∫–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      await Future.delayed(const Duration(milliseconds: 100));
      
      debugPrint('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${notification.title}');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –û—Ç–º–µ–Ω–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<bool> _cancelScheduledNotification(String notificationId) async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –æ—Ç–º–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      await Future.delayed(const Duration(milliseconds: 50));
      
      debugPrint('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ $notificationId –æ—Ç–º–µ–Ω–µ–Ω–æ');
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  String _formatTime(DateTime dateTime) {
    return '${dateTime.hour.toString().padLeft(2, '0')}:${dateTime.minute.toString().padLeft(2, '0')}';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  String _formatDate(DateTime dateTime) {
    const months = [
      '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
      '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ];
    
    return '${dateTime.day} ${months[dateTime.month - 1]}';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
  String _formatDateTime(DateTime dateTime) {
    return '${_formatDate(dateTime)} –≤ ${_formatTime(dateTime)}';
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<List<NotificationData>> getScheduledNotifications() async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã
      await Future.delayed(const Duration(milliseconds: 100));
      
      // –ú–æ–∫: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
      return [];
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return [];
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  Future<bool> scheduleAllBookingNotifications(Booking booking) async {
    try {
      final results = await Future.wait([
        schedule24HourReminder(booking),
        schedule1HourReminder(booking),
      ]);

      final success = results.every((result) => result);
      debugPrint('üîî –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ ${booking.id} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã: $success');
      return success;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: $e');
      return false;
    }
  }
}

/// –î–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
class NotificationData {
  final String id;
  final String title;
  final String body;
  final DateTime? scheduledTime;
  final NotificationType type;
  final String? bookingId;
  final Map<String, dynamic>? data;

  NotificationData({
    required this.id,
    required this.title,
    required this.body,
    this.scheduledTime,
    required this.type,
    this.bookingId,
    this.data,
  });

  @override
  String toString() {
    return 'NotificationData(id: $id, title: $title, type: $type, scheduledTime: $scheduledTime)';
  }
}

/// –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
enum NotificationType {
  tripReminder24h,
  tripReminder1h,
  bookingConfirmed,
  bookingCancelled,
  driverAssigned,
  timeChanged,
  tripStarted,
  tripCompleted,
}
