import 'package:flutter/foundation.dart';
import '../models/booking.dart';
import '../models/user.dart';
import '../models/route_stop.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
class TelegramService {
  static const TelegramService _instance = TelegramService._internal();

  const TelegramService._internal();

  static const TelegramService instance = _instance;

  // –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–æ—Ç–∞
  static const String _botToken = '123456789:ABCdefGHIjklMNOpqrsTUVwxyz';
  static const String _chatId = '-1001234567890'; // ID —á–∞—Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
  Future<bool> sendNewBookingNotification(Booking booking, AppUser user) async {
    try {
      final message = _formatNewBookingMessage(booking, user);
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
  Future<bool> sendBookingUpdateNotification(
    Booking booking,
    String changeDescription,
  ) async {
    try {
      final message = _formatBookingUpdateMessage(booking, changeDescription);
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞
  Future<bool> sendBookingCancellationNotification(
    Booking booking,
    String reason,
  ) async {
    try {
      final message = _formatBookingCancellationMessage(booking, reason);
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–µ–∑–¥–∫–µ (–∑–∞ 24 —á–∞—Å–∞)
  Future<bool> sendTripReminder24h(Booking booking) async {
    try {
      final message = _formatTripReminderMessage(booking, '24 —á–∞—Å–∞');
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 24—á: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–µ–∑–¥–∫–µ (–∑–∞ 1 —á–∞—Å)
  Future<bool> sendTripReminder1h(Booking booking) async {
    try {
      final message = _formatTripReminderMessage(booking, '1 —á–∞—Å');
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 1—á: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—è
  Future<bool> sendDriverAssignedNotification(
    Booking booking,
    String driverName,
    String driverPhone,
  ) async {
    try {
      final message = _formatDriverAssignedMessage(
        booking,
        driverName,
        driverPhone,
      );
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–æ–¥–∏—Ç–µ–ª–µ: $e');
      return false;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
  Future<bool> _sendMessage(String message) async {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å –∫ Telegram Bot API
      await Future.delayed(const Duration(milliseconds: 500));

      debugPrint('üì± –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:\n$message');

      // –ú–æ–∫: —Å–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: $e');
      return false;
    }
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
  String _formatNewBookingMessage(Booking booking, AppUser user) {
    final emoji = booking.tripType == TripType.group ? 'üë•' : 'üöó';
    final tripTypeText = booking.tripType == TripType.group
        ? '–ì—Ä—É–ø–ø–æ–≤–∞—è'
        : '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è';

    return '''
$emoji <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b>

üé´ <b>–ó–∞–∫–∞–∑:</b> ${booking.id}
üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${user.displayName}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${user.phoneNumber}

üöå <b>–¢–∏–ø:</b> $tripTypeText –ø–æ–µ–∑–¥–∫–∞
üìç <b>–ú–∞—Ä—à—Ä—É—Ç:</b> ${booking.fromLocation} ‚Üí ${booking.toLocation}
üìÖ <b>–î–∞—Ç–∞:</b> ${_formatDate(booking.departureTime)}
üïê <b>–í—Ä–µ–º—è:</b> ${_formatTime(booking.departureTime)}

üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${booking.totalPrice.toInt()} ‚ÇΩ
${booking.passengerCount > 1 ? 'üë• <b>–ü–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b> ${booking.passengerCount}\n' : ''}
${booking.notes?.isNotEmpty == true ? 'üìù <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</b> ${booking.notes}\n' : ''}

‚è∞ <i>–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: ${_formatDateTime(DateTime.now())}</i>
''';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
  String _formatBookingUpdateMessage(
    Booking booking,
    String changeDescription,
  ) {
    return '''
‚úèÔ∏è <b>–ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê</b>

üé´ <b>–ó–∞–∫–∞–∑:</b> ${booking.id}
üìç <b>–ú–∞—Ä—à—Ä—É—Ç:</b> ${booking.fromLocation} ‚Üí ${booking.toLocation}
üìÖ <b>–î–∞—Ç–∞:</b> ${_formatDate(booking.departureTime)}

üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏—è:</b> $changeDescription

‚è∞ <i>–ò–∑–º–µ–Ω–µ–Ω–æ: ${_formatDateTime(DateTime.now())}</i>
''';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞
  String _formatBookingCancellationMessage(Booking booking, String reason) {
    return '''
‚ùå <b>–û–¢–ú–ï–ù–ê –ó–ê–ö–ê–ó–ê</b>

üé´ <b>–ó–∞–∫–∞–∑:</b> ${booking.id}
üìç <b>–ú–∞—Ä—à—Ä—É—Ç:</b> ${booking.fromLocation} ‚Üí ${booking.toLocation}
üìÖ <b>–î–∞—Ç–∞:</b> ${_formatDate(booking.departureTime)}

üö´ <b>–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã:</b> $reason

‚è∞ <i>–û—Ç–º–µ–Ω—ë–Ω: ${_formatDateTime(DateTime.now())}</i>
''';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–µ–∑–¥–∫–µ
  String _formatTripReminderMessage(Booking booking, String timeUntil) {
    final emoji = booking.tripType == TripType.group ? 'üë•' : 'üöó';

    return '''
‚è∞ <b>–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï –û –ü–û–ï–ó–î–ö–ï</b>

$emoji <b>–î–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b> $timeUntil

üé´ <b>–ó–∞–∫–∞–∑:</b> ${booking.id}
üìç <b>–ú–∞—Ä—à—Ä—É—Ç:</b> ${booking.fromLocation} ‚Üí ${booking.toLocation}
üìÖ <b>–î–∞—Ç–∞:</b> ${_formatDate(booking.departureTime)}
üïê <b>–í—Ä–µ–º—è:</b> ${_formatTime(booking.departureTime)}

üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${booking.totalPrice.toInt()} ‚ÇΩ
${booking.passengerCount > 1 ? 'üë• <b>–ü–∞—Å—Å–∞–∂–∏—Ä–æ–≤:</b> ${booking.passengerCount}\n' : ''}

üìû <b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º:</b> ${booking.contactPhone ?? '–ù–µ —É–∫–∞–∑–∞–Ω'}
''';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—è
  String _formatDriverAssignedMessage(
    Booking booking,
    String driverName,
    String driverPhone,
  ) {
    return '''
üöó <b>–í–û–î–ò–¢–ï–õ–¨ –ù–ê–ó–ù–ê–ß–ï–ù</b>

üé´ <b>–ó–∞–∫–∞–∑:</b> ${booking.id}
üìç <b>–ú–∞—Ä—à—Ä—É—Ç:</b> ${booking.fromLocation} ‚Üí ${booking.toLocation}
üìÖ <b>–î–∞—Ç–∞:</b> ${_formatDate(booking.departureTime)}

üë®‚Äçüíº <b>–í–æ–¥–∏—Ç–µ–ª—å:</b> $driverName
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è:</b> $driverPhone

‚è∞ <i>–ù–∞–∑–Ω–∞—á–µ–Ω: ${_formatDateTime(DateTime.now())}</i>
''';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  String _formatDate(DateTime dateTime) {
    const months = [
      '—è–Ω–≤–∞—Ä—è',
      '—Ñ–µ–≤—Ä–∞–ª—è',
      '–º–∞—Ä—Ç–∞',
      '–∞–ø—Ä–µ–ª—è',
      '–º–∞—è',
      '–∏—é–Ω—è',
      '–∏—é–ª—è',
      '–∞–≤–≥—É—Å—Ç–∞',
      '—Å–µ–Ω—Ç—è–±—Ä—è',
      '–æ–∫—Ç—è–±—Ä—è',
      '–Ω–æ—è–±—Ä—è',
      '–¥–µ–∫–∞–±—Ä—è',
    ];

    return '${dateTime.day} ${months[dateTime.month - 1]} ${dateTime.year}';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  String _formatTime(DateTime dateTime) {
    return '${dateTime.hour.toString().padLeft(2, '0')}:${dateTime.minute.toString().padLeft(2, '0')}';
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
  String _formatDateTime(DateTime dateTime) {
    return '${_formatDate(dateTime)} –≤ ${_formatTime(dateTime)}';
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
  Future<bool> sendCustomMessage(String message) async {
    try {
      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É
  Future<bool> testConnection() async {
    try {
      const testMessage =
          '''
ü§ñ <b>–¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø</b>

‚úÖ –ë–æ—Ç "Time to Travel" —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
‚è∞ –í—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${_formatDateTime}

üîß –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç
''';

      return await _sendMessage(testMessage);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: $e');
      return false;
    }
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
  String get _formatDateTime {
    final now = DateTime.now();
    return '${_formatDate(now)} –≤ ${_formatTime(now)}';
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –¥–µ–Ω—å
  Future<bool> sendDailyStats({
    required int totalBookings,
    required int groupBookings,
    required int individualBookings,
    required double totalRevenue,
    required int cancelledBookings,
  }) async {
    try {
      final message =
          '''
üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –î–ï–ù–¨</b>

üìÖ <b>–î–∞—Ç–∞:</b> ${_formatDate(DateTime.now())}

üìà <b>–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: $totalBookings
‚Ä¢ –ì—Ä—É–ø–ø–æ–≤—ã–µ –ø–æ–µ–∑–¥–∫–∏: $groupBookings
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ: $individualBookings
‚Ä¢ –û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ: $cancelledBookings

üí∞ <b>–í—ã—Ä—É—á–∫–∞:</b> ${totalRevenue.toInt()} ‚ÇΩ

üìä <b>–ö–æ–Ω–≤–µ—Ä—Å–∏—è:</b> ${((totalBookings - cancelledBookings) / totalBookings * 100).toStringAsFixed(1)}%

‚è∞ <i>–û—Ç—á—ë—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω: ${_formatTime(DateTime.now())}</i>
''';

      return await _sendMessage(message);
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: $e');
      return false;
    }
  }
}
