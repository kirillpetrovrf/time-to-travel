import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:yandex_maps_mapkit/mapkit.dart';
import 'package:yandex_maps_mapkit/search.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–æ–≤ —á–µ—Ä–µ–∑ Yandex MapKit SearchManager
///
/// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–î–•–û–î –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ø–Ω–¥–µ–∫—Å–∞:
/// - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π SearchManager –∏–∑ MapKit SDK
/// - –†–∞–±–æ—Ç–∞–µ—Ç —Å –≤–∞—à–∏–º MapKit API –∫–ª—é—á–æ–º (e17d0b6b...)
/// - –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HTTP Geocoder (–∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞)
/// - –ù–∏–∫–∞–∫–∏—Ö 403 –æ—à–∏–±–æ–∫!
class YandexSuggestService {
  static const int _suggestNumberLimit = 10;

  late final SearchManager _searchManager;
  late final SuggestSession _suggestSession;

  bool _isInitialized = false;

  void initialize() {
    if (_isInitialized) {
      debugPrint('‚ö†Ô∏è [YandexSuggest] –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    try {
      // –°–æ–∑–¥–∞–µ–º SearchManager —á–µ—Ä–µ–∑ SearchFactory
      _searchManager = SearchFactory.instance.createSearchManager(
        SearchManagerType.Combined,
      );

      // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è suggest-–∑–∞–ø—Ä–æ—Å–æ–≤
      _suggestSession = _searchManager.createSuggestSession();

      _isInitialized = true;
      debugPrint('‚úÖ [YandexSuggest] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (MapKit SearchManager)');
    } catch (e) {
      debugPrint('‚ùå [YandexSuggest] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: $e');
    }
  }

  Future<List<SuggestItem>> getSuggestions({required String query}) async {
    if (!_isInitialized) {
      debugPrint(
        '‚ö†Ô∏è [YandexSuggest] –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ initialize()',
      );
      initialize();
    }

    if (query.isEmpty) {
      debugPrint('‚ö†Ô∏è [YandexSuggest] –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å');
      return [];
    }

    debugPrint('üîç [YandexSuggest] –ó–∞–ø—Ä–æ—Å SearchManager: "$query"');

    try {
      final completer = Completer<List<SuggestItem>>();

      // –°–æ–∑–¥–∞–µ–º BoundingBox –¥–ª—è –†–æ—Å—Å–∏–∏ (—à–∏—Ä–æ–∫–∏–π –æ—Ö–≤–∞—Ç)
      final boundingBox = BoundingBox(
        southWest: const Point(
          latitude: 41.0,
          longitude: 19.0,
        ), // –Æ–≥–æ-–∑–∞–ø–∞–¥ –†–æ—Å—Å–∏–∏
        northEast: const Point(
          latitude: 82.0,
          longitude: 180.0,
        ), // –°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ–∫ –†–æ—Å—Å–∏–∏
      );

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ suggest-–∑–∞–ø—Ä–æ—Å–∞
      final suggestOptions = SuggestOptions(
        suggestTypes: SuggestType(
          SuggestType.Geo.value | SuggestType.Biz.value,
        ),
      );

      // –°–ª—É—à–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∞
      final listener = SearchSuggestSessionSuggestListener(
        onResponse: (response) {
          debugPrint(
            '‚úÖ [YandexSuggest] –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: ${response.items.length} –ø–æ–¥—Å–∫–∞–∑–æ–∫',
          );

          final suggestions = response.items.take(_suggestNumberLimit).map((
            item,
          ) {
            return SuggestItem(
              title: item.title ?? '',
              subtitle: item.subtitle,
              displayText: item.displayText ?? item.title ?? '',
              searchText: item.searchText ?? item.title ?? '',
              uri: item.uri,
            );
          }).toList();

          completer.complete(suggestions);
        },
        onError: (error) {
          debugPrint('‚ùå [YandexSuggest] –û—à–∏–±–∫–∞ suggest: $error');
          completer.complete([]);
        },
      );

      // –í—ã–ø–æ–ª–Ω—è–µ–º suggest-–∑–∞–ø—Ä–æ—Å
      _suggestSession.suggest(
        boundingBox,
        suggestOptions,
        listener,
        text: query,
      );

      // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å —Ç–∞–π–º–∞—É—Ç–æ–º
      return await completer.future.timeout(
        const Duration(seconds: 5),
        onTimeout: () {
          debugPrint('‚è±Ô∏è [YandexSuggest] –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞');
          return [];
        },
      );
    } catch (e) {
      debugPrint('‚ùå [YandexSuggest] –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: $e');
      return [];
    }
  }

  void reset() {
    if (_isInitialized) {
      _suggestSession.reset();
      debugPrint('üîÑ [YandexSuggest] –°–±—Ä–æ—Å');
    }
  }

  void dispose() {
    if (_isInitialized) {
      // SearchManager –∏ SuggestSession —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è SDK
      _isInitialized = false;
      debugPrint('üóëÔ∏è [YandexSuggest] –†–µ—Å—É—Ä—Å—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã');
    }
  }
}

class SuggestItem {
  final String title;
  final String? subtitle;
  final String displayText;
  final String searchText;
  final String? uri;

  const SuggestItem({
    required this.title,
    this.subtitle,
    required this.displayText,
    required this.searchText,
    this.uri,
  });

  @override
  String toString() => 'SuggestItem(title: $title, subtitle: $subtitle)';
}
