import 'package:flutter/cupertino.dart';
import 'package:yandex_maps_mapkit/mapkit.dart' hide TextStyle, Icon;
import 'package:yandex_maps_mapkit/yandex_map.dart';
import '../../../theme/theme_manager.dart';
import '../../../theme/app_theme.dart';
import '../../../services/yandex_maps_service.dart';
import '../../../services/price_calculator_service.dart';
import '../../../services/calculator_settings_service.dart';
import '../../../models/calculator_settings.dart';
import '../../../models/price_calculation.dart';

/// –≠–∫—Ä–∞–Ω "–°–≤–æ–±–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç" —Å –∫–∞—Ä—Ç–æ–π –∫–∞–∫ –≤ –Ø–Ω–¥–µ–∫—Å.–¢–∞–∫—Å–∏
class CustomRouteWithMapScreen extends StatefulWidget {
  const CustomRouteWithMapScreen({super.key});

  @override
  State<CustomRouteWithMapScreen> createState() =>
      _CustomRouteWithMapScreenState();
}

// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è MapCameraListener
class _CameraListenerImpl implements MapCameraListener {
  final Function(VisibleRegion) onRegionChanged;

  _CameraListenerImpl(this.onRegionChanged);

  @override
  void onCameraPositionChanged(
    Map map,
    CameraPosition cameraPosition,
    CameraUpdateReason cameraUpdateReason,
    bool finished,
  ) {
    if (finished) {
      onRegionChanged(map.visibleRegion);
    }
  }
}

class _CustomRouteWithMapScreenState extends State<CustomRouteWithMapScreen> {
  final TextEditingController _fromController = TextEditingController();
  final TextEditingController _toController = TextEditingController();

  final YandexMapsService _mapsService = YandexMapsService.instance;
  final PriceCalculatorService _priceService = PriceCalculatorService.instance;
  final CalculatorSettingsService _settingsService =
      CalculatorSettingsService.instance;

  bool _isCalculating = false;
  PriceCalculation? _calculation;
  double? _distanceKm;
  String? _errorMessage;
  CalculatorSettings? _settings;

  // –ö–∞—Ä—Ç–∞
  MapWindow? _mapWindow;
  VisibleRegion? _visibleRegion;

  // UI —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  bool _isMapReady = false;

  @override
  void initState() {
    super.initState();
    _loadSettings();
  }

  Future<void> _loadSettings() async {
    try {
      final settings = await _settingsService.getSettings();
      setState(() {
        _settings = settings;
      });
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: $e');
      setState(() {
        _settings = CalculatorSettings.defaultSettings;
      });
    }
  }

  @override
  void dispose() {
    _fromController.dispose();
    _toController.dispose();
    super.dispose();
  }

  void _onMapCreated(MapWindow mapWindow) {
    _mapWindow = mapWindow;

    print('üó∫Ô∏è [MAP] ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–ê–†–¢–´ ==========');
    print('üó∫Ô∏è [MAP] MapWindow —Å–æ–∑–¥–∞–Ω: ${_mapWindow != null}');
    print('üó∫Ô∏è [MAP] Map –æ–±—ä–µ–∫—Ç: ${_mapWindow?.map != null}');

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç—ã
      final map = _mapWindow!.map;
      print('üó∫Ô∏è [MAP] ‚úÖ Map –æ–±—ä–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');

      // üîß –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢: –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ä–∞—Å—Ç—Ä–æ–≤—É—é –∫–∞—Ä—Ç—É (–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Å —Ç–∞–π–ª–∞–º–∏)
      try {
        map.mapType = MapType.Map;
        print('üó∫Ô∏è [MAP] üîß –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ MapType.Map (—Ä–∞—Å—Ç—Ä–æ–≤–∞—è –∫–∞—Ä—Ç–∞)');
      } catch (e) {
        print('üó∫Ô∏è [MAP] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–∏–ø –∫–∞—Ä—Ç—ã: $e');
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –Ω–∞ –ü–µ—Ä–º—å
      final permPoint = const Point(latitude: 58.0105, longitude: 56.2502);
      print('üó∫Ô∏è [MAP] –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞–º–µ—Ä—É –Ω–∞: $permPoint');

      map.move(CameraPosition(permPoint, zoom: 11.0, azimuth: 0.0, tilt: 0.0));
      print('üó∫Ô∏è [MAP] ‚úÖ –ö–∞–º–µ—Ä–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å logo
      print('üó∫Ô∏è [MAP] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ä—Ç—ã...');
      print('üó∫Ô∏è [MAP] Logo –¥–æ—Å—Ç—É–ø–µ–Ω: ${map.logo != null}');

      // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—Ç—ã
      print('üó∫Ô∏è [MAP] üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–ê–†–¢–´:');
      print('üó∫Ô∏è [MAP] üîç MapType: ${map.mapType}');
      print('üó∫Ô∏è [MAP] üîç –ö–∞–º–µ—Ä–∞: ${map.cameraPosition}');
      print('üó∫Ô∏è [MAP] üîç –í–∏–¥–∏–º–∞—è –æ–±–ª–∞—Å—Ç—å: ${map.visibleRegion}');

      // üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–ª—ã –∏ –∫–µ—à
      print('üó∫Ô∏è [MAP] ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ï—Å–ª–∏ —Ç–∞–π–ª—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è:');
      print('üó∫Ô∏è [MAP] ‚ö†Ô∏è 1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
      print('üó∫Ô∏è [MAP] ‚ö†Ô∏è 2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API-–∫–ª—é—á Yandex Maps');
      print('üó∫Ô∏è [MAP] ‚ö†Ô∏è 3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è Android');
      print('üó∫Ô∏è [MAP] ‚ö†Ô∏è 4. –ü–æ–∏—â–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö "No available cache for request"');

      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
      final cameraListener = _CameraListenerImpl((region) {
        if (mounted) {
          setState(() {
            _visibleRegion = region;
            print(
              'üó∫Ô∏è [MAP] üìç –í–∏–¥–∏–º–∞—è –æ–±–ª–∞—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${region.bottomLeft} - ${region.topRight}',
            );
          });
        }
      });
      map.addCameraListener(cameraListener);
      print('üó∫Ô∏è [MAP] ‚úÖ CameraListener –¥–æ–±–∞–≤–ª–µ–Ω');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –≤–∏–¥–∏–º—É—é –æ–±–ª–∞—Å—Ç—å
      final initialRegion = map.visibleRegion;
      print(
        'üó∫Ô∏è [MAP] –ù–∞—á–∞–ª—å–Ω–∞—è –≤–∏–¥–∏–º–∞—è –æ–±–ª–∞—Å—Ç—å: ${initialRegion.bottomLeft} - ${initialRegion.topRight}',
      );

      setState(() {
        _visibleRegion = initialRegion;
        _isMapReady = true;
      });

      print('üó∫Ô∏è [MAP] ========== ‚úÖ –ö–ê–†–¢–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï ==========');

      // –ñ–¥—ë–º 3 —Å–µ–∫—É–Ω–¥—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ª–∏ —Ç–∞–π–ª—ã
      Future.delayed(const Duration(seconds: 3), () {
        print('üó∫Ô∏è [MAP] üîç –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï 3 –°–ï–ö–£–ù–î:');
        print('üó∫Ô∏è [MAP] üîç –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Å–µ—Ç–∫—É –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
        print('üó∫Ô∏è [MAP] üîç ‚ùå –¢–∞–π–ª—ã –ù–ï –ó–ê–ì–†–£–ó–ò–õ–ò–°–¨ –æ—Ç Yandex API');
        print('üó∫Ô∏è [MAP] üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫:');
        print('üó∫Ô∏è [MAP] üîç - "No available cache for request"');
        print('üó∫Ô∏è [MAP] üîç - "HTTP" –∏–ª–∏ "SSL" –æ—à–∏–±–∫–∏');
        print('üó∫Ô∏è [MAP] üîç - "Connection" –æ—à–∏–±–∫–∏');
      });
    } catch (e, stackTrace) {
      print('üó∫Ô∏è [MAP] ‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã:');
      print('üó∫Ô∏è [MAP] –û—à–∏–±–∫–∞: $e');
      print('üó∫Ô∏è [MAP] StackTrace: $stackTrace');
    }
  }

  Future<void> _calculateRoute() async {
    final from = _fromController.text.trim();
    final to = _toController.text.trim();

    if (from.isEmpty || to.isEmpty) {
      setState(() {
        _errorMessage = '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è';
        _calculation = null;
      });
      return;
    }

    setState(() {
      _isCalculating = true;
      _errorMessage = null;
      _calculation = null;
    });

    try {
      print('üó∫Ô∏è –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç –º–∞—Ä—à—Ä—É—Ç–∞...');
      print('üó∫Ô∏è –û—Ç–∫—É–¥–∞: $from');
      print('üó∫Ô∏è –ö—É–¥–∞: $to');

      // 1. –ü–æ–ª—É—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç —á–µ—Ä–µ–∑ Yandex API
      final routeInfo = await _mapsService.calculateRoute(from, to);

      if (routeInfo == null) {
        throw Exception('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç');
      }

      print('‚úÖ –ú–∞—Ä—à—Ä—É—Ç –ø–æ–ª—É—á–µ–Ω: ${routeInfo.distance} –∫–º');

      // 2. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
      final calculation = await _priceService.calculatePrice(
        routeInfo.distance,
      );

      print('üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${calculation.finalPrice}‚ÇΩ');

      setState(() {
        _calculation = calculation;
        _distanceKm = routeInfo.distance;
        _isCalculating = false;
      });
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞: $e');
      setState(() {
        _errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç: ${e.toString()}';
        _isCalculating = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final themeManager = context.themeManager;
    final theme = themeManager.currentTheme;

    return CupertinoPageScaffold(
      backgroundColor: theme.systemBackground,
      navigationBar: CupertinoNavigationBar(
        backgroundColor: theme.secondarySystemBackground,
        middle: Text(
          '–°–≤–æ–±–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç',
          style: const TextStyle(color: CupertinoColors.label),
        ),
        trailing: CupertinoButton(
          padding: EdgeInsets.zero,
          child: const Icon(CupertinoIcons.info_circle),
          onPressed: () => _showInfoDialog(theme),
        ),
      ),
      child: Stack(
        children: [
          // –ö–∞—Ä—Ç–∞ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
          YandexMap(onMapCreated: _onMapCreated),

          // –û–≤–µ—Ä–ª–µ–π —Å –ø–æ–ª—è–º–∏ –≤–≤–æ–¥–∞
          SafeArea(
            child: SizedBox.expand(
              child: Column(
                children: [
                  // –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –ø–æ–ª—è–º–∏ –≤–≤–æ–¥–∞
                  Container(
                    margin: const EdgeInsets.all(16),
                    padding: const EdgeInsets.all(16),
                    decoration: BoxDecoration(
                      color: theme.systemBackground.withOpacity(0.95),
                      borderRadius: BorderRadius.circular(16),
                      boxShadow: [
                        BoxShadow(
                          color: CupertinoColors.black.withOpacity(0.1),
                          blurRadius: 10,
                          offset: const Offset(0, 2),
                        ),
                      ],
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [
                        // –ü–æ–ª–µ "–û—Ç–∫—É–¥–∞"
                        Container(
                          decoration: BoxDecoration(
                            color: theme.secondarySystemBackground,
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: CupertinoTextField(
                            controller: _fromController,
                            placeholder: '–û—Ç–∫—É–¥–∞ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º)',
                            padding: const EdgeInsets.all(16),
                            decoration: null,
                            style: TextStyle(color: theme.label),
                            placeholderStyle: TextStyle(
                              color: theme.secondaryLabel.withOpacity(0.5),
                            ),
                            prefix: Padding(
                              padding: const EdgeInsets.only(left: 16),
                              child: Icon(
                                CupertinoIcons.location,
                                color: theme.primary,
                                size: 20,
                              ),
                            ),
                          ),
                        ),

                        const SizedBox(height: 12),

                        // –ü–æ–ª–µ "–ö—É–¥–∞"
                        Container(
                          decoration: BoxDecoration(
                            color: theme.secondarySystemBackground,
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: CupertinoTextField(
                            controller: _toController,
                            placeholder: '–ö—É–¥–∞ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º)',
                            padding: const EdgeInsets.all(16),
                            decoration: null,
                            style: TextStyle(color: theme.label),
                            placeholderStyle: TextStyle(
                              color: theme.secondaryLabel.withOpacity(0.5),
                            ),
                            prefix: Padding(
                              padding: const EdgeInsets.only(left: 16),
                              child: Icon(
                                CupertinoIcons.location_solid,
                                color: theme.primary,
                                size: 20,
                              ),
                            ),
                          ),
                        ),

                        const SizedBox(height: 16),

                        // –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á–µ—Ç–∞
                        CupertinoButton.filled(
                          onPressed: _isCalculating ? null : _calculateRoute,
                          child: _isCalculating
                              ? const CupertinoActivityIndicator(
                                  color: CupertinoColors.white,
                                )
                              : const Text(
                                  '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å',
                                  style: TextStyle(
                                    fontSize: 16,
                                    fontWeight: FontWeight.w600,
                                  ),
                                ),
                        ),
                      ],
                    ),
                  ),

                  // –ì–∏–±–∫–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏
                  const Spacer(),

                  // –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (–≥–∏–±–∫–∞—è –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
                  if (_calculation != null || _errorMessage != null)
                    Flexible(
                      child: Container(
                        margin: const EdgeInsets.all(16),
                        padding: const EdgeInsets.all(20),
                        decoration: BoxDecoration(
                          color: theme.systemBackground.withOpacity(0.95),
                          borderRadius: BorderRadius.circular(16),
                          boxShadow: [
                            BoxShadow(
                              color: CupertinoColors.black.withOpacity(0.1),
                              blurRadius: 10,
                              offset: const Offset(0, -2),
                            ),
                          ],
                        ),
                        child: _errorMessage != null
                            ? _buildErrorContent(theme)
                            : _buildResultContent(theme),
                      ),
                    ),
                ],
              ),
            ),
          ),

          // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
          if (!_isMapReady)
            Container(
              color: theme.systemBackground.withOpacity(0.9),
              child: const Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    CupertinoActivityIndicator(radius: 20),
                    SizedBox(height: 16),
                    Text('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã...', style: TextStyle(fontSize: 16)),
                  ],
                ),
              ),
            ),
        ],
      ),
    );
  }

  Widget _buildErrorContent(CustomTheme theme) {
    return Row(
      children: [
        const Icon(
          CupertinoIcons.exclamationmark_triangle,
          color: CupertinoColors.systemRed,
          size: 24,
        ),
        const SizedBox(width: 12),
        Expanded(
          child: Text(
            _errorMessage!,
            style: TextStyle(fontSize: 14, color: theme.label),
          ),
        ),
      ],
    );
  }

  Widget _buildResultContent(CustomTheme theme) {
    final calc = _calculation!;

    return SingleChildScrollView(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        mainAxisSize: MainAxisSize.min,
        children: [
          // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∏ —Ñ–æ—Ä–º—É–ª–∞
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ',
                    style: TextStyle(fontSize: 14, color: theme.secondaryLabel),
                  ),
                  const SizedBox(height: 4),
                  Text(
                    '${_distanceKm!.toStringAsFixed(1)} –∫–º',
                    style: TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.w600,
                      color: theme.label,
                    ),
                  ),
                ],
              ),
              Column(
                crossAxisAlignment: CrossAxisAlignment.end,
                children: [
                  Text(
                    '–°—Ç–æ–∏–º–æ—Å—Ç—å',
                    style: TextStyle(fontSize: 14, color: theme.secondaryLabel),
                  ),
                  const SizedBox(height: 4),
                  Text(
                    '${calc.finalPrice} ‚ÇΩ',
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                      color: theme.primary,
                    ),
                  ),
                ],
              ),
            ],
          ),

          const SizedBox(height: 12),

          // –ö–Ω–æ–ø–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
          CupertinoButton.filled(
            onPressed: () => _bookTrip(),
            child: const Text(
              '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.w600),
            ),
          ),
        ],
      ),
    );
  }

  void _showInfoDialog(CustomTheme theme) {
    final settings = _settings ?? CalculatorSettings.defaultSettings;

    showCupertinoDialog(
      context: context,
      builder: (context) => CupertinoAlertDialog(
        title: const Text('–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä?'),
        content: Text(
          '\n–§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞:\n\n'
          '${settings.baseCost}‚ÇΩ (–±–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)\n+ '
          '${settings.costPerKm}‚ÇΩ √ó —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–∫–º)\n\n'
          '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${settings.minPrice}‚ÇΩ\n\n'
          '${settings.roundToThousands ? "–û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ —Ç—ã—Å—è—á –≤–≤–µ—Ä—Ö" : "–ë–µ–∑ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è"}',
        ),
        actions: [
          CupertinoDialogAction(
            child: const Text('–ü–æ–Ω—è—Ç–Ω–æ'),
            onPressed: () => Navigator.pop(context),
          ),
        ],
      ),
    );
  }

  void _bookTrip() {
    showCupertinoDialog(
      context: context,
      builder: (context) => CupertinoAlertDialog(
        title: const Text('–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'),
        content: const Text(
          '–§—É–Ω–∫—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\n–î–ª—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º.',
        ),
        actions: [
          CupertinoDialogAction(
            child: const Text('OK'),
            onPressed: () => Navigator.pop(context),
          ),
        ],
      ),
    );
  }
}
